version: "3.7"

networks:
  shop-backend-network:
  traefik-public3:
    external: true

volumes:
  shop-backend-media.vol:
  shop-backend-db-data-v2.vol:

services:
  shop-backend-db:
    image: postgis/postgis:16-3.5
    tty: true
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}

    volumes:
      - shop-backend-db-data-v2.vol:/var/lib/postgresql/data
    networks:
      - shop-backend
    deploy:
      placement:
        constraints:
          - node.labels.shop == true

  redis:
    image: redis:latest
    networks:
      - shop-backend-network
    deploy:
      placement:
        constraints:
          - node.labels.shop == true

  shop-backend:
    image: postgis/postgis:16-3.5
    healthcheck:
      test: curl -sS http://localhost:8000/admin/ || exit 1
      interval: 15s
      timeout: 5s
      retries: 2
      start_period: 1s
    sysctls:
      net.core.somaxconn: 1024
    volumes:
      - shop-backend-media.vol:/app/media
    networks:
      - shop-backend-network
      - traefik-public3
    environment:
      - DEBUG=on
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@shop-backend-db/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PORT=redis
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - SITE_URL=${SITE_URL}
      - MESSAGING_KAVENEGAR_APIKEY=${MESSAGING_KAVENEGAR_APIKEY}
      - MESSAGING_NAJVA_APIKEY=${MESSAGING_NAJVA_APIKEY}
      - MESSAGING_NAJVA_TOKEN=${MESSAGING_NAJVA_TOKEN}

    depends_on:
      - shop-backend-db

    deploy:
      replicas: 1
      update_config:
        order: start-first
      rollback_config:
        order: start-first

      placement:
        constraints:
          - node.labels.shop == true

      labels:
        - "traefik.enable=true"
        - "traefik.docker.lbswarm=true"
        - "traefik.docker.network=traefik-public3"
        - "traefik.http.routers.shop-backend-staging.rule=Host(`shop-backend.de.changeme.cloud`)"
        - "traefik.http.routers.shop-backend-staging.entrypoints=websecure"
        - "traefik.http.routers.shop-backend-staging.tls.certresolver=letsencryptresolver"
        - "traefik.http.services.shop-backend-staging.loadbalancer.server.port=8000"

  celery-worker:
    image: postgis/postgis:13-3.5-alpine
    command: celery -A shop worker -l info
    volumes:
      - shop-backend-media.vol:/app/media
    networks:
      - shop-backend-network
    environment:
      - DEBUG=on
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_URL=psql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@shop-backend-db/${POSTGRES_DB}
      - REDIS_HOST=redis
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - EMAIL_USE_TLS=${EMAIL_USE_TLS}
      - SITE_URL=${SITE_URL}
      - MESSAGING_KAVENEGAR_APIKEY=${MESSAGING_KAVENEGAR_APIKEY}
      - MESSAGING_NAJVA_APIKEY=${MESSAGING_NAJVA_APIKEY}
      - MESSAGING_NAJVA_TOKEN=${MESSAGING_NAJVA_TOKEN}

    depends_on:
      - shop-backend-db
      - redis

    deploy:
      placement:
        constraints:
          - node.labels.shop == true
