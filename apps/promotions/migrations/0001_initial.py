# Generated by Django 5.1.2 on 2024-11-11 09:14

import django.core.validators
import django.db.models.deletion
import django_lifecycle.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Coupon",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                ("title", models.CharField(max_length=100, verbose_name="Title")),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code to apply this coupon.", max_length=50, unique=True, verbose_name="Code"
                    ),
                ),
                (
                    "valid_from",
                    models.DateTimeField(
                        blank=True,
                        help_text="The start date and time for coupon validity.",
                        null=True,
                        verbose_name="Valid From",
                    ),
                ),
                (
                    "valid_until",
                    models.DateTimeField(
                        blank=True,
                        help_text="The end date and time for coupon validity.",
                        null=True,
                        verbose_name="Valid Until",
                    ),
                ),
                (
                    "total",
                    models.PositiveIntegerField(
                        help_text="Maximum number of times this coupon can be used.",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Total Uses",
                    ),
                ),
                (
                    "type",
                    models.IntegerField(
                        choices=[(0, "Percent"), (1, "Amount")],
                        help_text="Type of discount: percentage or fixed amount.",
                        verbose_name="Discount Type",
                    ),
                ),
                (
                    "min_cart",
                    models.FloatField(
                        help_text="Minimum cart value required to apply this coupon.",
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Minimum Cart Value",
                    ),
                ),
                (
                    "max_discount_total",
                    models.FloatField(
                        blank=True,
                        help_text="Maximum discount amount for a cart when the coupon type is percentage.",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.0)],
                        verbose_name="Maximum Discount Total",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
                (
                    "users",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Users eligible to use this coupon.",
                        related_name="coupons",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Eligible Users",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coupon",
                "verbose_name_plural": "Coupons",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="CouponConsume",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                (
                    "coupon",
                    models.ForeignKey(
                        help_text="The coupon that was consumed.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consumptions",
                        to="promotions.coupon",
                        verbose_name="Coupon",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who used the coupon.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="coupon_consumptions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Coupon Consumption",
                "verbose_name_plural": "Coupon Consumptions",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
