# Generated by Django 5.1.2 on 2024-11-21 15:41

import django.core.validators
import django.db.models.deletion
import django_lifecycle.mixins
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("account", "0007_alter_user_managers"),
        ("products", "0005_alter_productproperty_product"),
        ("promotions", "0003_alter_coupon_type"),
        ("shipments", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Order",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                (
                    "note",
                    models.TextField(
                        blank=True,
                        help_text="Any special instructions for the order. Maximum 1000 characters",
                        null=True,
                        validators=[django.core.validators.MaxLengthValidator(1000)],
                        verbose_name="Order Note",
                    ),
                ),
                (
                    "product_total_price",
                    models.FloatField(help_text="The total price of all products", verbose_name="Total Product Price"),
                ),
                (
                    "coupon_total_discount",
                    models.FloatField(help_text="Total discount applied via coupon", verbose_name="Coupon Discount"),
                ),
                (
                    "product_total_discount",
                    models.FloatField(help_text="Total discount applied to products", verbose_name="Product Discount"),
                ),
                (
                    "total_price",
                    models.FloatField(help_text="The final total price after discounts", verbose_name="Total Price"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        help_text="The shipping address for the order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="account.address",
                        verbose_name="Shipping Address",
                    ),
                ),
                (
                    "coupon",
                    models.ForeignKey(
                        blank=True,
                        help_text="The coupon applied to the order",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to="promotions.coupon",
                        verbose_name="Coupon",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who placed the order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order",
                "verbose_name_plural": "Orders",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                (
                    "product_title",
                    models.CharField(help_text="The title of the product", max_length=100, verbose_name="Product Title"),
                ),
                ("product_price", models.FloatField(help_text="The price of the product", verbose_name="Product Price")),
                (
                    "product_discount",
                    models.FloatField(
                        default=0.0, help_text="Discount applied to the product", verbose_name="Product Discount"
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(help_text="The quantity of the product ordered", verbose_name="Quantity"),
                ),
                (
                    "price",
                    models.FloatField(help_text="The final price after quantity and discounts", verbose_name="Final Price"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="The order to which this item belongs",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        help_text="The product included in the order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to="products.product",
                        verbose_name="Product",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who placed the order",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_items",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Item",
                "verbose_name_plural": "Order Items",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="OrderShipment",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                (
                    "shipping_date",
                    models.DateTimeField(help_text="The date when the shipment was made", verbose_name="Shipping Date"),
                ),
                ("shipment_price", models.FloatField(help_text="The price of the shipment", verbose_name="Shipment Price")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="The order associated with this shipment",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_shipments",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "shipment_type",
                    models.ForeignKey(
                        help_text="The shipment type used",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="shipments.shipmenttype",
                        verbose_name="Shipment Type",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Shipment",
                "verbose_name_plural": "Order Shipments",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name="OrderStatus",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True, null=True, verbose_name="Created At")),
                ("updated_at", models.DateTimeField(auto_now=True, null=True, verbose_name="Updated at")),
                ("is_active", models.BooleanField(db_index=True, default=True, verbose_name="Is active")),
                (
                    "type",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Payment waiting"),
                            (1, "Order placed"),
                            (2, "Product packaging"),
                            (3, "Ready for shipment"),
                            (4, "On the way"),
                            (5, "Dropped in the delivery station"),
                            (6, "Delivered"),
                            (7, "Canceled"),
                        ],
                        help_text="The type of order status",
                        verbose_name="Order Status Type",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True, verbose_name="Timestamp")),
                ("estimated_time", models.DateField(blank=True, null=True, verbose_name="Estimated Delivery Time")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_created_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Created By",
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        help_text="The order related to this status",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="order_statuses",
                        to="order.order",
                        verbose_name="Order",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_updated_by",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Updated by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Order Status",
                "verbose_name_plural": "Order Statuses",
                "ordering": ["-created_at"],
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
